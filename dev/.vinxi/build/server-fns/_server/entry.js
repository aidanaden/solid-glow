import{fromJSON as I,crossSerializeStream as L,getCrossReferenceHeader as U}from"seroval";import{CustomEventPlugin as g,DOMExceptionPlugin as w,EventPlugin as S,FormDataPlugin as P,HeadersPlugin as R,ReadableStreamPlugin as y,RequestPlugin as v,ResponsePlugin as E,URLSearchParamsPlugin as b,URLPlugin as q}from"seroval-plugins/web";import{sharedConfig as $}from"solid-js";import{provideRequestEvent as C}from"solid-js/web/storage";import{getRequestURL as F,toWebRequest as H,getRequestIP as D,eventHandler as N,setHeader as k}from"h3";const p="Invariant Violation",{setPrototypeOf:z=function(e,t){return e.__proto__=t,e}}=Object;class m extends Error{framesToPop=1;name=p;constructor(t=p){super(typeof t=="number"?`${p}: ${t} (see https://github.com/apollographql/invariant-packages)`:t),z(this,m.prototype)}}function d(e,t){if(!e)throw new m(t)}const x=Symbol("h3Event"),f=Symbol("fetchEvent"),J={get(e,t){return t===f?e:e[t]??e[x][t]}};function M(e){return e.web||(e.web={url:F(e),request:H(e)}),new Proxy({request:e.web.request,clientAddress:D(e),locals:{},[x]:e},J)}function W(e){if(!e[f]){const t=M(e);e[f]=t}return e[f]}function _(e,t){return new ReadableStream({start(n){L(t,{scopeId:e,plugins:[g,w,S,P,R,y,v,E,b,q],onSerialize(s,i){const o=i?`(${U(e)},${s})`:s;n.enqueue(new TextEncoder().encode(`${o};
`))},onDone(){n.close()},onError(s){n.error(s)}})}})}async function j(e){d(e.method==="POST",`Invalid method ${e.method}. Expected POST.`);const t=W(e),n=t.request,s=n.headers.get("x-server-id"),i=n.headers.get("x-server-instance"),o=new URL(n.url);let c,u;if(s)d(typeof s=="string","Invalid server function"),[c,u]=s.split("#");else if(c=o.searchParams.get("id"),u=o.searchParams.get("name"),!c||!u)throw new Error("Invalid request");const O=(await globalThis.MANIFEST["server-fns"].chunks[c].import())[u];let a=[];if(!i){const r=o.searchParams.get("args");r&&JSON.parse(r).forEach(l=>a.push(l))}const h=n.headers.get("content-type");h.startsWith("multipart/form-data")||h.startsWith("application/x-www-form-urlencoded")?a.push(await n.formData()):a=I(await n.json(),{plugins:[g,w,S,P,R,y,v,E,b,q]});try{const r=await C(t,()=>($.context={event:t},O(...a)));if(!i){const l=r instanceof Error,T=new URL(n.headers.get("referer"));return new Response(null,{status:302,headers:{Location:T.toString(),...r?{"Set-Cookie":`flash=${JSON.stringify({url:o.pathname+encodeURIComponent(o.search),result:l?r.message:r,error:l,input:[...a.slice(0,-1),[...a[a.length-1].entries()]]})}; Secure; HttpOnly;`}:{}}})}return typeof r=="string"?new Response(r):(k(e,"content-type","text/javascript"),_(i,r))}catch(r){return r instanceof Response&&r.status===302?new Response(null,{status:i?204:302,headers:{Location:r.headers.get("Location")}}):r}}const Q=N(j);export{Q as default};
